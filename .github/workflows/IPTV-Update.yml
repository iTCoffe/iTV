name: IPTV Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2,8,14,20 * * *'

env:
  TZ: Asia/Shanghai

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Git
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "iptv-updater"

    - name: Get Timestamp
      id: time
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S CST')" >> $GITHUB_OUTPUT

    - name: Update Playlists
      run: |
        set -e
        wget -qO base.m3u https://raw.githubusercontent.com/suxuang/myIPTV/main/ipv4a.m3u
        
        # 处理央视源
        grep -A 1 '央视' base.m3u | awk '!/^--$/' | awk '!seen[$0]++' > CCTV.m3u
        
        # 处理其他源
        grep -v -A 1 '央视' base.m3u | awk '!/^--$/' | awk '!seen[$0]++' > CNTV.m3u
        
        # 生成主播放列表
        {
          echo '#EXTM3U x-tvg-url="https://erw.shrimp.cloudns.biz/epg.xml" catchup="append" catchup-source="?playseek=${(b)yyyyMMddHHmmss}-${(e)yyyyMMddHHmmss}"'
          cat CCTV.m3u
          cat CNTV.m3u
        } | awk '!seen[$0]++' > IPTV.m3u
        
        # 生成文本格式播放列表
        awk '
          /^#EXTINF:/ {
            gsub("\r", "")
            split($0, a, ",")
            name = a[2]
            getline
            url = $0
            gsub("\r", "", url)
            print name "," url
          }' IPTV.m3u | awk '!seen[$0]++' > IPTV.txt
        
        # 更新README
        echo -e "# IPTV 自动更新\n\n### 更新于 ${{ steps.time.outputs.date }}\n\n### 包含格式:\n- [M3U播放列表](IPTV.m3u)\n- [TXT播放列表](IPTV.txt)" > README.md
        
        # 清理临时文件
        rm base.m3u CCTV.m3u CNTV.m3u

    - name: Commit Changes
      run: |
        git add IPTV.m3u IPTV.txt README.md
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "自动更新: ${{ steps.time.outputs.date }}"
          echo "有更改，已提交"
        else
          echo "无更改，跳过提交"
        fi

    - name: Push Updates
      run: git push origin main
